name: Auth Service CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-auth-service:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_DB: auth_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'
        cache-dependency-path: 'services/auth-service/src/requirements.txt'

    - name: Install dependencies
      working-directory: ../services/auth-services/src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Wait for PostgreSQL
      run: |
        echo "Waiting for PostgreSQL to start..."
        until pg_isready -h localhost -p 5432; do
          sleep 1
        done

    - name: Run migrations
      working-directory: ../services/auth-service/src
      env:
        DB_NAME: auth_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py makemigrations
        python manage.py migrate

    - name: Run tests
      working-directory: ../services/auth-service/src
      env:
        DB_NAME: auth_db
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_HOST: localhost
        DB_PORT: 5432
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        python manage.py test users --verbosity=2

    - name: Security audit
      run: |
        pip install safety
        safety check -r ../services/auth-service/src/requirements.txt --full-report

  integration-tests:
    needs: test-auth-service
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: API Test Suite
      uses: containerssh/gha-build@v1
      with:
        command: |
          docker-compose -f services/auth-service/docker-compose.yml up -d
          docker exec auth-service python manage.py migrate
          docker exec auth-service python manage.py test integration_tests
